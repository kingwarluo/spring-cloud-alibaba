# 应用名称
spring:
  application:
    name: gateway-service
  cloud:
    nacos:
      discovery:
        username: nacos
        password: nacos
        server-addr: 101.43.122.53:8848
    gateway:
      discovery:
        locator:
          enabled: false  #不再需要Gateway路由转发
      routes:  #路由规则配置
        #第一个路由配置，warehouse-service路由规则
        - id: warehouse_service_route
          #lb开头代表基于gateway的负载均衡策略选择实例
          uri: lb://warehouse-service
          #谓词配置
          predicates:
            #Path路径谓词，代表用户端URI如果以/warehouse开头便会转发到warehouse-service实例
            - Path=/warehouse/**
            #After生效时间谓词，2020年10月15日后该路由才能在网关对外暴露
            - After=2020-10-05T00:00:00.000+08:00[Asia/Shanghai]
            #- Before=2020-01-20T17:42:47.789-07:00[America/Denver]
            #- Header=X-Request-Id, \d+
          #过滤器配置
          filters:
            #忽略掉第一层前缀进行转发
            - StripPrefix=1
            #为响应头附加X-Response=Blue
            - AddResponseHeader=X-Response,Blue
            #- AddRequestParameter=foo,bar #在请求参数中追加foo=bar
            #涉及过滤器参数时，采用name-args的完整写法
#            - name: Retry #name是内置的过滤器名
#              args: #参数部分使用args说明，当后端服务返回 503 状态码的响应后，Retry 过滤器会重新发起请求，最多重试 3 次
#                retries: 3
#                status: 503
            # 更多过滤器参考 https://docs.spring.io/spring-cloud-gateway/docs/2.2.6.RELEASE/reference/html/#gatewayfilter-factories
        #第二个路由配置，path以order开头的路由规则，转发到lb://order-service中
        - id: order_service_route
          uri: lb://order-service
          predicates:
            - Path=/order/**
          filters:
            # 忽略掉第一层路径转发，这里就是忽略掉/order再转发，1代表1层
            - StripPrefix=1
            - My=skuName

server:
  port: 8084
# Actuator Web 访问端口
management:
  server:
    port: 8085
  endpoints:
    jmx:
      exposure:
        include: '*'
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

